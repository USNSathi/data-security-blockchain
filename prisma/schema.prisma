generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model satellite_info {
  NORAD       String                @id @db.Char(5)
  name        String                @db.VarChar(255)
  launched_on DateTime              @default(now()) @db.DateTime(0)
  altitude    Decimal?              @db.Decimal(10, 2)
  status      satellite_info_status @default(Positioned)
  device_type String                @default("Satellite") @db.Char(15)
  public_key  String?               @db.Text
  private_key String?               @db.Text
}

model ground_station_info {
  id            Int                        @id @default(autoincrement())
  name          String                     @db.VarChar(255)
  positioned_on DateTime                   @default(now()) @db.DateTime(0)
  latitude      Decimal                    @db.Decimal(10, 5)
  longitude     Decimal                    @db.Decimal(10, 5)
  status        ground_station_info_status @default(Positioned)
  device_type   String                     @default("Ground_Station") @db.Char(15)
  public_key    String?                    @db.Text
  private_key   String?                    @db.Text
}

model blockchain {
  name                    String            @db.VarChar(100)
  status                  blockchain_status
  type                    blockchain_type
  uuid                    String            @db.VarChar(100)
  connectingNodePublicKey String            @db.VarChar(1000)
  networkNodePublicKey    String            @db.VarChar(1000)
  precedingBlockHash      String            @unique(map: "precedingBlockHash") @db.VarChar(512)
  blockDepth              BigInt            @unique(map: "blockDepth") @db.UnsignedBigInt
  currentHash             String            @id @db.VarChar(512)
  attempt                 Int               @db.UnsignedInt
  transactionDate         DateTime          @db.Timestamp(0)
  nonce                   Int               @db.UnsignedInt
}

model mobile_info {
  IMEI          String             @id @db.Char(15)
  name          String             @db.VarChar(255)
  brand         String             @db.VarChar(255)
  registered_on DateTime           @default(now()) @db.DateTime(0)
  status        mobile_info_status @default(Registered)
  device_type   String             @default("Mobile") @db.Char(15)
  public_key    String?            @db.Text
  private_key   String?            @db.Text
}

model phased_array_antenna_info {
  id            Int                              @id @default(autoincrement())
  name          String                           @db.VarChar(255)
  type          phased_array_antenna_info_type
  positioned_on DateTime                         @default(now()) @db.DateTime(0)
  latitude      Decimal                          @db.Decimal(10, 5)
  longitude     Decimal                          @db.Decimal(10, 5)
  status        phased_array_antenna_info_status @default(Positioned)
  device_type   String                           @default("Phased_Array_Antenna") @db.Char(30)
  public_key    String?                          @db.Text
  private_key   String?                          @db.Text
}

model vehicle_info {
  VIN          String              @id @db.VarChar(17)
  name         String              @db.VarChar(255)
  brand        String              @db.VarChar(255)
  make_year    Int                 @db.Year
  color        String              @db.VarChar(50)
  status       vehicle_info_status
  device_type  String              @default("Vehicle") @db.Char(15)
  type         vehicle_info_type
  purchased_on DateTime            @default(now()) @db.DateTime(0)
  public_key   String?             @db.Text
  private_key  String?             @db.Text
}

model aircraft_info {
  id                 Int                  @id @default(autoincrement())
  type               aircraft_info_type
  name               String               @db.VarChar(255)
  manufacturer       String               @db.VarChar(255)
  status             aircraft_info_status
  operating_from     DateTime             @db.Date
  passenger_capacity String?              @db.VarChar(255)
  top_speed_mph      Decimal              @db.Decimal(10, 2)
  range_miles        Decimal              @db.Decimal(10, 2)
  service_ceiling_ft Decimal              @db.Decimal(10, 2)
  length_ft          Decimal              @db.Decimal(10, 2)
  wingspan_ft        Decimal              @db.Decimal(10, 2)
  device_type        String               @default("Aircraft") @db.Char(15)
  public_key         String?              @db.Text
  private_key        String?              @db.Text
}

model watercraft_info {
  id                 Int                    @id @default(autoincrement())
  type               watercraft_info_type
  name               String                 @db.VarChar(255)
  manufacturer       String                 @db.VarChar(255)
  status             watercraft_info_status
  operating_from     DateTime               @db.Date
  passenger_capacity String                 @db.VarChar(255)
  length_ft          Decimal                @db.Decimal(10, 2)
  width_ft           Decimal                @db.Decimal(10, 2)
  device_type        String                 @default("Watercraft") @db.Char(15)
  public_key         String?                @db.Text
  private_key        String?                @db.Text
}

enum satellite_info_status {
  Positioned
  Active
  Inactive
  Decommissioned
}

enum ground_station_info_status {
  Positioned
  Active
  Inactive
  Decommissioned
}

enum blockchain_status {
  Positioned
  Active
  Inactive
  Decommissioned
  Registered
  Compromised
}

enum blockchain_type {
  genesis_block        @map("genesis block")
  Satellite
  Ground_Station       @map("Ground Station")
  Phased_Array_Antenna @map("Phased Array Antenna")
  Mobile
  Aircraft
  Vehicle
  Watercraft
}

enum mobile_info_status {
  Registered
  Compromised
}

enum phased_array_antenna_info_type {
  Standard
  High_Performance      @map("High Performance")
  Flat_High_Performance @map("Flat High Performance")
}

enum phased_array_antenna_info_status {
  Positioned
  Active
  Inactive
  Decommissioned
}

enum vehicle_info_status {
  Active
  Inactive
}

enum vehicle_info_type {
  sedan
  truck
  suv
  van
}

enum aircraft_info_type {
  Airplane
  Helicopter
  Drone
}

enum aircraft_info_status {
  Active
  Inactive
  Decommissioned
}

enum watercraft_info_type {
  Boat
  Ship
  Submarine
  Yacht
}

enum watercraft_info_status {
  Active
  Inactive
  Decommissioned
}
